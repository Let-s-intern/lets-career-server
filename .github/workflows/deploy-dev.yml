name: Deploy to EC2

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # JDK version 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      ## Make application-secret.yml
      - name: Make application-secret.yml
        run: |
          touch ./src/main/resources/application-dev.yml
          echo "${{ secrets.APPLICATION_SECRET_DEV }}" > ./src/main/resources/application-dev.yml
        env:
          PROPERTIES_DEV: ${{ secrets.APPLICATION_SECRET_DEV }}

      - name: 🍃 gradle build 를 위한 권한을 부여합니다.
        run: chmod +x gradlew

      - name: Clean Gradle cache
        run: ./gradlew clean

      - name: 🍃 gradle build 합니다.
        run: ./gradlew clean build -x test

      - name: 🍃 docker image build 후 docker hub 에 push 합니다.
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t ${{ secrets.DOCKER_USERNAME }}/letsintern-server-dev .
          docker push ${{ secrets.DOCKER_USERNAME }}/letsintern-server-dev

      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY_DEV }}
          script: mkdir -p ~/srv/ubuntu/letsintern-server-dev

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: ~/srv/ubuntu/
          remote_host: ${{ secrets.EC2_HOST_DEV }}
          remote_user: ubuntu
          remote_key: ${{ secrets.EC2_KEY_DEV }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY_DEV }}
          script: |
            sudo docker stop $(docker ps -qa)
            sudo docker rm $(docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/letsintern-server-dev
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/letsintern-server-dev
            sudo docker image prune -f
